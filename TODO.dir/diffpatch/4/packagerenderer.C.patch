--- cinecutie/packagerenderer.C	2008-10-19 20:38:37.000000000 +0200
+++ /home/user/cinecutie/cinecutie/packagerenderer.C	2010-02-19 22:19:11.978570999 +0100
@@ -98,8 +98,12 @@
 	delete audio_cache;
 	delete video_cache;
 	delete vconfig;
+	delete aconfig;
 }
 
+// PackageRenderer::initialize happens only once for every node when doing rendering session
+// This is not called for each package!
+
 int PackageRenderer::initialize(MWindow *mwindow,
 		EDL *edl, 
 		Preferences *preferences, 
@@ -147,12 +151,7 @@
 
 
 
-// Tag output paths for VFS here.
-//	if(!mwindow && preferences->renderfarm_vfs && preferences->use_renderfarm)
-	if(!get_master() && preferences->renderfarm_vfs && preferences->use_renderfarm)
-		sprintf(asset->path, RENDERFARM_FS_PREFIX "%s", package->path);
-	else
-		strcpy(asset->path, package->path);
+	strcpy(asset->path, package->path);
 
 
 	
@@ -192,9 +191,7 @@
 void PackageRenderer::create_engine()
 {
 	int current_achannel = 0, current_vchannel = 0;
-// Fix audio buffers to 1 second
 	audio_read_length = command->get_edl()->session->sample_rate;
-	command->get_edl()->session->playback_config->aconfig->fragment_size = audio_read_length;
 
 	aconfig->fragment_size = audio_read_length;
 
@@ -263,7 +260,7 @@
 				command->get_edl()->session->output_h, 
  				mwindow->cwindow->gui->canvas,
 				0);
-//			video_device->start_playback();
+			video_device->start_playback();
 		}
 	}
 
@@ -280,6 +277,7 @@
 
 void PackageRenderer::do_audio()
 {
+//printf("PackageRenderer::do_audio 1\n");
 // Do audio data
 	if(asset->audio_data)
 	{
@@ -299,6 +297,7 @@
 			audio_position,
 			0);
 
+//printf("PackageRenderer::do_audio 3\n");
 
 
 // Fix buffers for preroll
@@ -488,7 +487,7 @@
 		if(!error) file->stop_video_thread();
 		if(mwindow)
 		{
-//			video_device->stop_playback();
+			video_device->stop_playback();
 			video_device->close_all();
 			delete video_device;
 		}
@@ -524,6 +523,11 @@
 // 	package->video_end - package->video_start);
 
 
+// FIXME: The design that we only get EDL once does not give us neccessary flexiblity to do things the way they should be donek
+	default_asset->video_data = package->video_do;
+	default_asset->audio_data = package->audio_do;
+	Render::check_asset(edl, *default_asset);
+	
 	create_output();
 
 	if(!asset->video_data) video_done = 1;
@@ -600,16 +604,13 @@
 			if(need_audio && !result) do_audio();
 
 
-//PRINT_TRACE
 			if(!result) set_progress(samples_rendered);
-//PRINT_TRACE
 
 
 
 
 
 			if(!result && progress_cancelled()) result = 1;
-//PRINT_TRACE
 
 // printf("PackageRenderer::render_package 10 %d %d %d %d\n", 
 // audio_read_length, video_read_length, samples_rendered, result);
@@ -619,25 +620,25 @@
 				result = get_result();
 		}
 
-//PRINT_TRACE
+//printf("PackageRenderer::render_package 20\n");
 		stop_engine();
-//PRINT_TRACE
+//printf("PackageRenderer::render_package 30\n");
 
 		stop_output();
-//PRINT_TRACE
+//printf("PackageRenderer::render_package 40\n");
 
 
 	}
 
 
-//PRINT_TRACE
 
+//printf("PackageRenderer::render_package 50\n");
 	close_output();
+//printf("PackageRenderer::render_package 60\n");
 
-//PRINT_TRACE
 
 	set_result(result);
-//PRINT_TRACE
+//printf("PackageRenderer::render_package 70\n");
 
 
 
@@ -711,7 +712,7 @@
 				temp_output[0] = new VFrame*[1];
 				temp_output[0][0] = compressed_output;
 				error = file->write_frames(temp_output, 1);
-				delete temp_output[0];
+				delete [] temp_output[0];
 				delete temp_output;
 			}
 		}
