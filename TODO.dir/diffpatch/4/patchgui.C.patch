--- cinecutie/patchgui.C	2008-07-21 21:14:01.000000000 +0200
+++ /home/user/cinecutie/cinecutie/patchgui.C	2010-02-19 22:19:11.978570999 +0100
@@ -83,9 +83,9 @@
 	if(nudge) delete nudge;
 }
 
-void PatchGUI::create_objects()
+int PatchGUI::create_objects()
 {
-	update(x, y);
+	return update(x, y);
 }
 
 int PatchGUI::reposition(int x, int y)
@@ -297,6 +297,7 @@
 			mwindow->restart_brender();
 			mwindow->sync_parameters(CHANGE_EDL);
 			mwindow->gui->lock_window("PatchGUI::toggle_behavior 1");
+			mwindow->undo->update_undo(_("play patch"), LOAD_PATCHES);
 			break;
 
 		case Tracks::MUTE:
@@ -304,21 +305,26 @@
 			mwindow->restart_brender();
 			mwindow->sync_parameters(CHANGE_PARAMS);
 			mwindow->gui->lock_window("PatchGUI::toggle_behavior 2");
+			mwindow->undo->update_undo(_("mute patch"), LOAD_PATCHES);
 			break;
 
 // Update affected tracks in cwindow
 		case Tracks::RECORD:
 			mwindow->cwindow->update(0, 1, 1);
+			mwindow->undo->update_undo(_("record patch"), LOAD_PATCHES);
 			break;
 
 		case Tracks::GANG:
+			mwindow->undo->update_undo(_("gang patch"), LOAD_PATCHES);
 			break;
 
 		case Tracks::DRAW:
+			mwindow->undo->update_undo(_("draw patch"), LOAD_PATCHES);
 			mwindow->gui->update(0, 1, 0, 0, 0, 0, 0);
 			break;
 
 		case Tracks::EXPAND:
+			mwindow->undo->update_undo(_("expand patch"), LOAD_PATCHES);
 			break;
 	}
 }
@@ -390,7 +396,6 @@
 {
 	if(is_event_win() && get_buttonpress() == 1)
 	{
-		mwindow->undo->update_undo_before();
 		set_status(BC_Toggle::TOGGLE_DOWN);
 		update(!get_value());
 		patch->toggle_behavior(Tracks::PLAY,
@@ -405,9 +410,8 @@
 int PlayPatch::button_release_event()
 {
 	int result = BC_Toggle::button_release_event();
-	if(patch->patchbay->drag_operation == Tracks::PLAY)
+	if(patch->patchbay->drag_operation != Tracks::NONE)
 	{
-		mwindow->undo->update_undo_after(_("play patch"), LOAD_PATCHES);
 		patch->patchbay->drag_operation = Tracks::NONE;
 	}
 	return result;
@@ -443,7 +447,6 @@
 {
 	if(is_event_win() && get_buttonpress() == 1)
 	{
-		mwindow->undo->update_undo_before();
 		set_status(BC_Toggle::TOGGLE_DOWN);
 		update(!get_value());
 		patch->toggle_behavior(Tracks::RECORD,
@@ -458,9 +461,8 @@
 int RecordPatch::button_release_event()
 {
 	int result = BC_Toggle::button_release_event();
-	if(patch->patchbay->drag_operation == Tracks::RECORD)
+	if(patch->patchbay->drag_operation != Tracks::NONE)
 	{
-		mwindow->undo->update_undo_after(_("record patch"), LOAD_PATCHES);
 		patch->patchbay->drag_operation = Tracks::NONE;
 	}
 	return result;
@@ -495,7 +497,6 @@
 {
 	if(is_event_win() && get_buttonpress() == 1)
 	{
-		mwindow->undo->update_undo_before();
 		set_status(BC_Toggle::TOGGLE_DOWN);
 		update(!get_value());
 		patch->toggle_behavior(Tracks::GANG,
@@ -510,9 +511,8 @@
 int GangPatch::button_release_event()
 {
 	int result = BC_Toggle::button_release_event();
-	if(patch->patchbay->drag_operation == Tracks::GANG)
+	if(patch->patchbay->drag_operation != Tracks::NONE)
 	{
-		mwindow->undo->update_undo_after(_("gang patch"), LOAD_PATCHES);
 		patch->patchbay->drag_operation = Tracks::NONE;
 	}
 	return result;
@@ -547,7 +547,6 @@
 {
 	if(is_event_win() && get_buttonpress() == 1)
 	{
-		mwindow->undo->update_undo_before();
 		set_status(BC_Toggle::TOGGLE_DOWN);
 		update(!get_value());
 		patch->toggle_behavior(Tracks::DRAW,
@@ -562,9 +561,8 @@
 int DrawPatch::button_release_event()
 {
 	int result = BC_Toggle::button_release_event();
-	if(patch->patchbay->drag_operation == Tracks::DRAW)
+	if(patch->patchbay->drag_operation != Tracks::NONE)
 	{
-		mwindow->undo->update_undo_after(_("draw patch"), LOAD_PATCHES);
 		patch->patchbay->drag_operation = Tracks::NONE;
 	}
 	return result;
@@ -598,7 +596,6 @@
 {
 	if(is_event_win() && get_buttonpress() == 1)
 	{
-		mwindow->undo->update_undo_before();
 		set_status(BC_Toggle::TOGGLE_DOWN);
 		update(!get_value());
 		IntAuto *current;
@@ -615,6 +612,7 @@
 			&current->value);
 
 
+		mwindow->undo->update_undo(_("keyframe"), LOAD_AUTOMATION);
 
 		if(mwindow->edl->session->auto_conf->autos[AUTOMATION_MUTE])
 		{
@@ -629,9 +627,8 @@
 int MutePatch::button_release_event()
 {
 	int result = BC_Toggle::button_release_event();
-	if(patch->patchbay->drag_operation == Tracks::MUTE)
+	if(patch->patchbay->drag_operation != Tracks::NONE)
 	{
-		mwindow->undo->update_undo_after(_("mute patch"), LOAD_PATCHES);
 		patch->patchbay->drag_operation = Tracks::NONE;
 	}
 	return result;
@@ -679,7 +676,6 @@
 {
 	if(is_event_win() && get_buttonpress() == 1)
 	{
-		mwindow->undo->update_undo_before();
 		set_status(BC_Toggle::TOGGLE_DOWN);
 		update(!get_value());
 		patch->toggle_behavior(Tracks::EXPAND,
@@ -695,9 +691,8 @@
 int ExpandPatch::button_release_event()
 {
 	int result = BC_Toggle::button_release_event();
-	if(patch->patchbay->drag_operation == Tracks::EXPAND)
+	if(patch->patchbay->drag_operation != Tracks::NONE)
 	{
-		mwindow->undo->update_undo_after(_("expand patch"), LOAD_PATCHES);
 		patch->patchbay->drag_operation = Tracks::NONE;
 	}
 	return result;
@@ -720,12 +715,11 @@
 
 int TitlePatch::handle_event()
 {
-	mwindow->undo->update_undo_before(_("track title"), this);
 	strcpy(patch->track->title, get_text());
 	mwindow->update_plugin_titles();
 	mwindow->gui->canvas->draw_overlays();
 	mwindow->gui->canvas->flash();
-	mwindow->undo->update_undo_after(_("track title"), LOAD_PATCHES);
+	mwindow->undo->update_undo(_("track title"), LOAD_PATCHES);
 	return 1;
 }
 
@@ -761,13 +755,12 @@
 
 void NudgePatch::set_value(int64_t value)
 {
-	mwindow->undo->update_undo_before(_("nudge"), this);
 	patch->track->nudge = value;
 
-	if(patch->track->gang && patch->track->record)
+	if(patch->track->gang)
 		patch->patchbay->synchronize_nudge(patch->track->nudge, patch->track);
 
-	mwindow->undo->update_undo_after(_("nudge"), LOAD_PATCHES);
+	mwindow->undo->update_undo("nudge", LOAD_AUTOMATION, this);
 
 	mwindow->gui->unlock_window();
 	if(patch->track->data_type == TRACK_VIDEO)
