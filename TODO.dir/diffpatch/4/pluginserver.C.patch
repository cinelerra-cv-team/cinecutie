--- cinecutie/pluginserver.C	2008-08-06 20:45:37.000000000 +0200
+++ /home/user/cinecutie/cinecutie/pluginserver.C	2010-02-19 22:19:11.988570758 +0100
@@ -29,9 +29,9 @@
 #include "edl.h"
 #include "edlsession.h"
 #include "floatautos.h"
-#include "keyframes.h"
 #include "localsession.h"
 #include "mainprogress.h"
+#include "mainundo.h"
 #include "menueffects.h"
 #include "mwindow.h"
 #include "mwindowgui.h"
@@ -145,15 +145,12 @@
 	realtime = multichannel = fileio = 0;
 	synthesis = 0;
 	start_auto = end_auto = 0;
+	picon = 0;
 	transition = 0;
 	new_plugin = 0;
 	client = 0;
 	use_opengl = 0;
 	vdevice = 0;
-	modules = 0;
-	nodes = 0;
-	picon = 0;
-	
 
 	is_lad = 0;
 	lad_descriptor_function = 0;
@@ -204,7 +201,7 @@
 	strcpy(this->path, path);
 }
 
-void PluginServer::set_title(const char *string)
+void PluginServer::set_title(char *string)
 {
 	if(title) delete [] title;
 	title = new char[strlen(string) + 1];
@@ -265,10 +262,7 @@
 			if(!lad_descriptor_function)
 			{
 // Not a recognized plugin
-				fprintf(stderr, 
-					"PluginServer::open_plugin %d: new_plugin undefined in %s\n", 
-					__LINE__,
-					path);
+				fprintf(stderr, "PluginServer::open_plugin: new_plugin undefined in %s\n", path);
 				dlclose(plugin_fd);
 				plugin_fd = 0;
 				return PLUGINSERVER_NOT_RECOGNIZED;
@@ -304,11 +298,6 @@
 		client = new_plugin(this);
 	}
 
-
-
-// Run initialization functions
-// Don't load defaults when probing the directory.
-	if(!master) client->load_defaults();
 	realtime = client->is_realtime();
 	audio = client->is_audio();
 	video = client->is_video();
@@ -320,7 +309,7 @@
 	transition = client->is_transition();
 	set_title(client->plugin_title());
 
-	if(master && (realtime || transition))
+	if(master)
 	{
 		picon = client->new_picon();
 	}
@@ -335,12 +324,7 @@
 	if(!plugin_open) return 0;
 
 	int plugin_status, result;
-	if(client)
-	{
-// Defaults are saved in the thread.
-//		if(client->defaults) client->save_defaults();
-		delete client;
-	}
+	if(client) delete client;
 
 // shared object is persistent since plugin deletion would unlink its own object
 //	dlclose(plugin_fd);
@@ -492,12 +476,10 @@
 	aclient->source_position = current_position;
 	aclient->total_len = total_len;
 	aclient->sample_rate = sample_rate;
-
 	if(plugin)
 		aclient->source_start = plugin->startproject * 
 			sample_rate /
 			aclient->project_sample_rate;
-
 	aclient->direction = direction;
 	if(multichannel)
 		aclient->process_buffer(fragment_size, 
@@ -806,18 +788,10 @@
 			mwindow->edl->local_session->get_selectionstart(1) * 
 				mwindow->edl->session->sample_rate);
 	}
-
 	client->update_display_title();
 	client->show_gui();
 }
 
-void PluginServer::hide_gui()
-{
-	if(!plugin_open) return;
-	if(client->defaults) client->save_defaults();
-	client->hide_gui();
-}
-
 void PluginServer::update_gui()
 {
 	if(!plugin_open || !plugin) return;
@@ -1016,35 +990,14 @@
 	return result;
 }
 
-// Called for
 KeyFrame* PluginServer::get_keyframe()
 {
 	if(plugin)
-// Realtime plugin case
 		return plugin->get_keyframe();
 	else
-// Rendered plugin case
 		return keyframe;
 }
 
-
-void PluginServer::apply_keyframe(KeyFrame *src)
-{
-	if(!plugin)
-	{
-		keyframe->copy_data(src);
-	}
-	else
-	{
-// Span keyframes
-		plugin->keyframes->update_parameter(src);
-	}
-}
-
-
-
-
-
 void PluginServer::get_camera(float *x, float *y, float *z,
 	int64_t position, int direction)
 {
@@ -1086,7 +1039,6 @@
 {
 	if(video) mwindow->restart_brender();
 	mwindow->sync_parameters();
-	mwindow->update_keyframe_guis();
 	if(mwindow->edl->session->auto_conf->plugins)
 	{
 		mwindow->gui->lock_window("PluginServer::sync_parameters");
