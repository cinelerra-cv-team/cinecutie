--- cinecutie/transitionpopup.C	2008-07-21 21:14:01.000000000 +0200
+++ /home/user/cinecutie/cinecutie/transitionpopup.C	2010-02-19 22:19:12.018571035 +0100
@@ -19,7 +19,6 @@
  * 
  */
 
-#include "bcdisplayinfo.h"
 #include "clip.h"
 #include "edit.h"
 #include "edl.h"
@@ -34,50 +33,22 @@
 #include "transitionpopup.h"
 
 
-TransitionLengthThread::TransitionLengthThread(MWindow *mwindow)
- : BC_DialogThread()
+TransitionLengthThread::TransitionLengthThread(MWindow *mwindow, TransitionPopup *popup)
+ : Thread()
 {
 	this->mwindow = mwindow;
+	this->popup = popup;
 }
 
 TransitionLengthThread::~TransitionLengthThread()
 {
 }
 
-void TransitionLengthThread::start(Transition *transition, 
-	double length)
-{
-	this->transition = transition;
-	this->length = this->orig_length = length;
-	BC_DialogThread::start();
-}
-
-BC_Window* TransitionLengthThread::new_gui()
-{
-	BC_DisplayInfo display_info;
-	int x = display_info.get_abs_cursor_x() - 150;
-	int y = display_info.get_abs_cursor_y() - 50;
-	TransitionLengthDialog *gui = new TransitionLengthDialog(mwindow, 
-		this,
-		x,
-		y);
-	gui->create_objects();
-	return gui;
-}
-
-void TransitionLengthThread::handle_close_event(int result)
+void TransitionLengthThread::run()
 {
-	if(!result)
-	{
-		if(transition)
-		{
-			mwindow->set_transition_length(transition, length);
-		}
-		else
-		{
-			mwindow->set_transition_length(length);
-		}
-	}
+	TransitionLengthDialog window(mwindow, popup->transition);
+	window.create_objects();
+	int result = window.run_window();
 }
 
 
@@ -85,26 +56,20 @@
 
 
 
-
-
-
-TransitionLengthDialog::TransitionLengthDialog(MWindow *mwindow, 
-	TransitionLengthThread *thread,
-	int x,
-	int y)
+TransitionLengthDialog::TransitionLengthDialog(MWindow *mwindow, Transition *transition)
  : BC_Window(PROGRAM_NAME ": Transition length", 
-	x,
-	y,
-	300, 
-	100, 
-	-1, 
-	-1, 
-	0,
-	0, 
-	1)
+				mwindow->gui->get_abs_cursor_x(1) - 150,
+				mwindow->gui->get_abs_cursor_y(1) - 50,
+				300, 
+				100, 
+				-1, 
+				-1, 
+				0,
+				0, 
+				1)
 {
 	this->mwindow = mwindow;
-	this->thread = thread;
+	this->transition = transition;
 }
 
 TransitionLengthDialog::~TransitionLengthDialog()
@@ -118,7 +83,6 @@
 	text = new TransitionLengthText(mwindow, this, 100, 10);
 	text->create_objects();
 	add_subwindow(new BC_OKButton(this));
-	add_subwindow(new BC_CancelButton(this));
 	show_window();
 }
 
@@ -138,7 +102,7 @@
 	int x, 
 	int y)
  : BC_TumbleTextBox(gui, 
- 	(float)gui->thread->length,
+ 	(float)gui->transition->edit->track->from_units(gui->transition->length),
 	(float)0, 
 	(float)100, 
 	x,
@@ -152,11 +116,23 @@
 int TransitionLengthText::handle_event()
 {
 	double result = atof(get_text());
-	if(!EQUIV(result, gui->thread->length))
+	if(!EQUIV(result, gui->transition->length))
 	{
-		gui->thread->length = result;
+		gui->transition->length = gui->transition->track->to_units(result, 1);
+		if(gui->transition->edit->track->data_type == TRACK_VIDEO) mwindow->restart_brender();
+		mwindow->sync_parameters(CHANGE_PARAMS);
+		mwindow->edl->session->default_transition_length = result;
+		mwindow->gui->lock_window();
+		mwindow->gui->update(0,
+			1,
+			0,
+			0,
+			0, 
+			0,
+			0);
+		mwindow->gui->unlock_window();
 	}
-
+	
 	return 1;
 }
 
@@ -189,20 +165,22 @@
 
 void TransitionPopup::create_objects()
 {
-	length_thread = new TransitionLengthThread(mwindow);
+	length_thread = new TransitionLengthThread(mwindow, this);
 //	add_item(attach = new TransitionPopupAttach(mwindow, this));
 	add_item(show = new TransitionPopupShow(mwindow, this));
 	add_item(on = new TransitionPopupOn(mwindow, this));
-	add_item(length_item = new TransitionPopupLength(mwindow, this));
+	add_item(length = new TransitionPopupLength(mwindow, this));
 	add_item(detach = new TransitionPopupDetach(mwindow, this));
 }
 
 int TransitionPopup::update(Transition *transition)
 {
 	this->transition = transition;
-	this->length = transition->edit->track->from_units(transition->length);
 	show->set_checked(transition->show);
 	on->set_checked(transition->on);
+	char len_text[50];
+	sprintf(len_text, _("Length: %2.2f sec"), transition->track->from_units(transition->length));
+	length->set_text(len_text);
 	return 0;
 }
 
@@ -310,8 +288,7 @@
 
 int TransitionPopupLength::handle_event()
 {
-	popup->length_thread->start(popup->transition,
-		popup->length);
+	popup->length_thread->start();
 	return 1;
 }
 
