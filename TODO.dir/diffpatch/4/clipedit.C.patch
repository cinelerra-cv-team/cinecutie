--- cinecutie/clipedit.C	2008-10-11 17:46:25.000000000 +0200
+++ /home/user/cinecutie/cinecutie/clipedit.C	2010-02-19 22:19:11.868576808 +0100
@@ -21,7 +21,6 @@
 
 #include "awindow.h"
 #include "awindowgui.h"
-#include "bcsignals.h"
 #include "clipedit.h"
 #include "edl.h"
 #include "fonts.h"
@@ -32,12 +31,13 @@
 #include "mwindowgui.h"
 #include "vwindow.h"
 #include "vwindowgui.h"
-
+#include "errorbox.h"
+#include "tracks.h"
 
 
 
 ClipEdit::ClipEdit(MWindow *mwindow, AWindow *awindow, VWindow *vwindow)
- : BC_DialogThread()
+ : Thread()
 {
 	this->mwindow = mwindow;
 	this->awindow = awindow;
@@ -50,91 +50,120 @@
 {
 }
 
-// After the window is closed and deleted, this is called.
-void ClipEdit::handle_close_event(int result)
+void ClipEdit::edit_clip(EDL *clip)
 {
-	if(!result)
+// Allow more than one window so we don't have to delete the clip in handle_event
+	if(clip)
 	{
-		EDL *new_edl = 0;
-// Add to EDL
-		if(create_it)
-			new_edl = mwindow->edl->add_clip(clip);
+		this->clip = clip;
+		this->create_it = 0;
+		Thread::start();
+	}
+}
 
-// Copy clip to existing clip in EDL
+void ClipEdit::create_clip(EDL *clip)
+{
+// Allow more than one window so we don't have to delete the clip in handle_event
+	if(clip)
+	{
+		this->clip = clip;
+		this->create_it = 1;
+		Thread::start();
+	}
+}
+
+void ClipEdit::run()
+{
+	if(clip)
+	{
+		EDL *original = clip;
 		if(!create_it)
-			original->copy_session(clip);
+		{
+			clip = new EDL(mwindow->edl);
+			clip->create_objects();
+			clip->copy_all(original);
+		}
 
 
-//			mwindow->vwindow->gui->update_sources(mwindow->vwindow->gui->source->get_text());
 
 
-		mwindow->awindow->gui->lock_window();
-		mwindow->awindow->gui->update_assets();
-		mwindow->awindow->gui->flush();
-		mwindow->awindow->gui->unlock_window();
 
-// Change VWindow to it if vwindow was called
-// But this doesn't let you easily create a lot of clips.
-		if(vwindow && create_it)
-		{
-//				vwindow->change_source(new_edl);
-		}
-	}
-	else
-	{
-		mwindow->session->clip_number--;
-	}
 
 
 
-// For creating new clips, the original was copied in add_clip.
-// For editing old clips, the original was transferred to another variable.
-	if(!create_it) delete clip;
-	original = 0;
-	clip = 0;
-	create_it = 0;
-}
+		ClipEditWindow *window = new ClipEditWindow(mwindow, this);
 
+		window->create_objects();
 
-// User creates the window and initializes it here.
-BC_Window* ClipEdit::new_gui()
-{
-	original = clip;
+		int  name_ok_or_cancel = 0;
+		int result;
+		while (!name_ok_or_cancel)
+		{ 
+			result = window->run_window();
+			if (result)
+				name_ok_or_cancel = 1;
+			else
+			{
+				// Check if clip name is unique
+				name_ok_or_cancel = 1;
+				for (int i = 0; i < mwindow->edl->clips.total; i++)
+				{
+					if (!strcasecmp(clip->local_session->clip_title,
+						mwindow->edl->clips.values[i]->local_session->clip_title) &&
+						(create_it || strcasecmp(clip->local_session->clip_title,
+						original->local_session->clip_title)))
+					
+						name_ok_or_cancel = 0;
+				}
+				if (!name_ok_or_cancel)
+				{
+					ErrorBox error(PROGRAM_NAME ": Error", 
+						mwindow->gui->get_abs_cursor_x(1), 
+						mwindow->gui->get_abs_cursor_y(1));
+					error.create_objects(_("A clip with that name already exists."));
+					error.run_window();
+					window->titlebox->activate();
+				}
+			}
+		}
 
-	if(!create_it)
-	{
-		this->clip = new EDL(mwindow->edl);
-		clip->create_objects();
-		clip->copy_all(original);
-	}
+		if(!result)
+		{
+			EDL *new_edl = 0;
+// Add to EDL
+			if(create_it)
+				new_edl = mwindow->edl->add_clip(window->clip);
 
+// Copy clip to existing clip in EDL
+			if(!create_it)
+				original->copy_session(clip);
 
-	window = new ClipEditWindow(mwindow, this);
-	window->create_objects();
-	return window;
-}
 
+//			mwindow->vwindow->gui->update_sources(mwindow->vwindow->gui->source->get_text());
 
 
-void ClipEdit::edit_clip(EDL *clip)
-{
-// Allow more than one window so we don't have to delete the clip in handle_event
-	if(!this->clip)
-	{
-		this->clip = clip;
-		this->create_it = 0;
-		start();
-	}
-}
+			mwindow->awindow->gui->async_update_assets();
 
-void ClipEdit::create_clip(EDL *clip)
-{
-// Allow more than one window so we don't have to delete the clip in handle_event
-	if(!this->clip)
-	{
-		this->clip = clip;
-		this->create_it = 1;
-		start();
+// Change VWindow to it if vwindow was called
+// But this doesn't let you easily create a lot of clips.
+			if(vwindow && create_it)
+			{
+//				vwindow->change_source(new_edl);
+			}
+		}
+		else
+		{
+			mwindow->session->clip_number--;
+		}
+		
+
+
+// For creating new clips, the original was copied in add_clip.
+// For editing old clips, the original was transferred to another variable.
+		delete window->clip;
+		delete window;
+		clip = 0;
+		create_it = 0;
 	}
 }
 
@@ -144,7 +173,6 @@
 
 
 
-
 ClipEditWindow::ClipEditWindow(MWindow *mwindow, ClipEdit *thread)
  : BC_Window(PROGRAM_NAME ": Clip Info", 
  	mwindow->gui->get_abs_cursor_x(1) - 400 / 2,
@@ -168,18 +196,21 @@
 	
 void ClipEditWindow::create_objects()
 {
-	lock_window("ClipEditWindow::create_objects");
+	this->clip = thread->clip;
 	this->create_it = thread->create_it;
 
 	int x = 10, y = 10;
 	int x1 = x;
 	BC_TextBox *textbox;
-	BC_TextBox *titlebox;
 	BC_Title *title;
 
 	add_subwindow(title = new BC_Title(x1, y, _("Title:")));
 	y += title->get_h() + 5;
 	add_subwindow(titlebox = new ClipEditTitle(this, x1, y, get_w() - x1 * 2));
+
+	int end = strlen(titlebox->get_text());
+	titlebox->set_selection(0, end, end);
+
 	y += titlebox->get_h() + 10;
 	add_subwindow(title = new BC_Title(x1, y, _("Comments:")));
 	y += title->get_h() + 5;
@@ -197,7 +228,6 @@
 	add_subwindow(new BC_CancelButton(this));
 	show_window();
 	titlebox->activate();
-	unlock_window();
 }
 
 
@@ -205,14 +235,14 @@
 
 
 ClipEditTitle::ClipEditTitle(ClipEditWindow *window, int x, int y, int w)
- : BC_TextBox(x, y, w, 1, window->thread->clip->local_session->clip_title)
+ : BC_TextBox(x, y, w, 1, window->clip->local_session->clip_title)
 {
 	this->window = window;
 }
 
 int ClipEditTitle::handle_event()
 {
-	strcpy(window->thread->clip->local_session->clip_title, get_text());
+	strcpy(window->clip->local_session->clip_title, get_text());
 	return 1;
 }
 
@@ -221,13 +251,13 @@
 
 
 ClipEditComments::ClipEditComments(ClipEditWindow *window, int x, int y, int w, int rows)
- : BC_TextBox(x, y, w, rows, window->thread->clip->local_session->clip_notes)
+ : BC_TextBox(x, y, w, rows, window->clip->local_session->clip_notes)
 {
 	this->window = window;
 }
 
 int ClipEditComments::handle_event()
 {
-	strcpy(window->thread->clip->local_session->clip_notes, get_text());
+	strcpy(window->clip->local_session->clip_notes, get_text());
 	return 1;
 }
