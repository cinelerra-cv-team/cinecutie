--- cinecutie/preferencesthread.C	2008-10-11 17:46:25.000000000 +0200
+++ /home/user/cinecutie/cinecutie/preferencesthread.C	2010-02-19 22:19:11.988570758 +0100
@@ -59,7 +59,7 @@
 
 
 #define WIDTH 750
-#define HEIGHT 730
+#define HEIGHT 745
 
 
 PreferencesMenuitem::PreferencesMenuitem(MWindow *mwindow)
@@ -79,9 +79,23 @@
 
 int PreferencesMenuitem::handle_event() 
 {
-	mwindow->gui->unlock_window();
-	thread->start();
-	mwindow->gui->lock_window("PreferencesMenuitem::handle_event");
+	if(!thread->running())
+	{
+		thread->start();
+	}
+	else
+	{
+// window_lock has to be locked but window can't be locked until after
+// it is known to exist, so we neglect window_lock for now
+		if(thread->window)
+		{
+			thread->window_lock->lock("SetFormat::handle_event");
+			thread->window->lock_window("PreferencesMenuitem::handle_event");
+			thread->window->raise_window();
+			thread->window->unlock_window();
+			thread->window_lock->unlock();
+		}
+	}
 	return 1;
 }
 
@@ -89,18 +103,20 @@
 
 
 PreferencesThread::PreferencesThread(MWindow *mwindow)
- : BC_DialogThread()
+ : Thread()
 {
 	this->mwindow = mwindow;
 	window = 0;
 	thread_running = 0;
+	window_lock = new Mutex("PreferencesThread::window_lock");
 }
 
 PreferencesThread::~PreferencesThread()
 {
+	delete window_lock;
 }
 
-BC_Window* PreferencesThread::new_gui()
+void PreferencesThread::run()
 {
 	int need_new_indexes;
 
@@ -119,20 +135,17 @@
 	need_new_indexes = 0;
 	rerender = 0;
 
- 	mwindow->gui->lock_window("NewThread::new_gui");
-	int x = mwindow->gui->get_abs_cursor_x(0) - WIDTH / 2;
-	int y = mwindow->gui->get_abs_cursor_y(0) - HEIGHT / 2;
+ 	int x = mwindow->gui->get_root_w(0, 1) / 2 - WIDTH / 2;
+	int y = mwindow->gui->get_root_h(1) / 2 - HEIGHT / 2;
 
+	window_lock->lock("PreferencesThread::run 1");
 	window = new PreferencesWindow(mwindow, this, x, y);
 	window->create_objects();
-	mwindow->gui->unlock_window();
+	window_lock->unlock();
 
 	thread_running = 1;
-	return window;
-}
+	int result = window->run_window();
 
-void PreferencesThread::handle_close_event(int result)
-{
 	thread_running = 0;
 	if(!result)
 	{
@@ -140,25 +153,21 @@
 		mwindow->save_defaults();
 	}
 
+	window_lock->lock("PreferencesThread::run 2");
+	delete window;
 	window = 0;
+	window_lock->unlock();
 	delete preferences;
 	delete edl;
-	preferences = 0;
-	edl = 0;
 
 	mwindow->defaults->update("DEFAULTPREF", current_dialog);
 }
 
-
-
 int PreferencesThread::update_framerate()
 {
-	if(thread_running)
+	if(thread_running && window)
 	{
-		lock_gui("PreferencesThread::update_framerate");
-		PreferencesWindow *window = (PreferencesWindow*)get_gui();
-		if(window) window->update_framerate();
-		unlock_gui();
+		window->update_framerate();
 	}
 	return 0;
 }
@@ -268,7 +277,7 @@
 	return 0;
 }
 
-const char* PreferencesThread::category_to_text(int category)
+char* PreferencesThread::category_to_text(int category)
 {
 	switch(category)
 	{
@@ -338,18 +347,16 @@
 
 PreferencesWindow::~PreferencesWindow()
 {
-	lock_window("PreferencesWindow::~PreferencesWindow");
 	delete category;
 	if(dialog) delete dialog;
 	for(int i = 0; i < categories.total; i++)
 		delete categories.values[i];
-	unlock_window();
 }
 
-void PreferencesWindow::create_objects()
+int PreferencesWindow::create_objects()
 {
 	BC_Button *button;
-	lock_window("PreferencesWindow::create_objects");
+
 
 
 	mwindow->theme->draw_preferences_bg(this);
@@ -388,7 +395,7 @@
 
 	set_current_dialog(thread->current_dialog);
 	show_window();
-	unlock_window();
+	return 0;
 }
 
 int PreferencesWindow::update_framerate()
@@ -477,7 +484,7 @@
 	int x, 
 	int y,
 	int category,
-	const char *text,
+	char *text,
 	VFrame **images)
  : BC_GenericButton(x, y, text, images)
 {
